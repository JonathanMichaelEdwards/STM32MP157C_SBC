diff --git a/realtek.c.orig b/realtek.c
index a20001918..9bcd4cce4 100644
--- a/drivers/net/phy/realtek.c
+++ b/drivers/net/phy/realtek.c
@@ -136,10 +136,12 @@ static int rtl8211f_config_intr(struct phy_device *phydev)
 {
 	u16 val;
 
-	if (phydev->interrupts == PHY_INTERRUPT_ENABLED)
-		val = RTL8211F_INER_LINK_STATUS;
-	else
-		val = 0;
+//	if (phydev->interrupts == PHY_INTERRUPT_ENABLED)
+//		val = RTL8211F_INER_LINK_STATUS;
+//	else
+//		val = 0;
+
+    val = 0;
 
 	return phy_write_paged(phydev, 0xa42, RTL821x_INER, val);
 }
@@ -155,13 +157,16 @@ static int rtl8211_config_aneg(struct phy_device *phydev)
 	/* Quirk was copied from vendor driver. Unfortunately it includes no
 	 * description of the magic numbers.
 	 */
-	if (phydev->speed == SPEED_100 && phydev->autoneg == AUTONEG_DISABLE) {
-		phy_write(phydev, 0x17, 0x2138);
-		phy_write(phydev, 0x0e, 0x0260);
-	} else {
-		phy_write(phydev, 0x17, 0x2108);
-		phy_write(phydev, 0x0e, 0x0000);
-	}
+//	if (phydev->speed == SPEED_100 && phydev->autoneg == AUTONEG_DISABLE) {
+//		phy_write(phydev, 0x17, 0x2138);
+//		phy_write(phydev, 0x0e, 0x0260);
+//	} else {
+//		phy_write(phydev, 0x17, 0x2108);
+//		phy_write(phydev, 0x0e, 0x0000);
+//	}
+
+	phy_write(phydev, 0x17, 0x2138);
+	phy_write(phydev, 0x0e, 0x0260);
 
 	return 0;
 }
@@ -209,6 +214,7 @@ static int rtl8211f_config_init(struct phy_device *phydev)
 		return 0;
 	}
 
+
 	ret = phy_modify_paged_changed(phydev, 0xd08, 0x11, RTL8211F_TX_DELAY,
 				       val_txdly);
 	if (ret < 0) {
@@ -330,28 +336,30 @@ static int rtlgen_get_speed(struct phy_device *phydev)
 	if (val < 0)
 		return val;
 
-	switch (val & RTLGEN_SPEED_MASK) {
-	case 0x0000:
-		phydev->speed = SPEED_10;
-		break;
-	case 0x0010:
-		phydev->speed = SPEED_100;
-		break;
-	case 0x0020:
-		phydev->speed = SPEED_1000;
-		break;
-	case 0x0200:
-		phydev->speed = SPEED_10000;
-		break;
-	case 0x0210:
-		phydev->speed = SPEED_2500;
-		break;
-	case 0x0220:
-		phydev->speed = SPEED_5000;
-		break;
-	default:
-		break;
-	}
+//	switch (val & RTLGEN_SPEED_MASK) {
+//	case 0x0000:
+//		phydev->speed = SPEED_10;
+//		break;
+//	case 0x0010:
+//		phydev->speed = SPEED_100;
+//		break;
+//	case 0x0020:
+//		phydev->speed = SPEED_1000;
+//		break;
+//	case 0x0200:
+//		phydev->speed = SPEED_10000;
+//		break;
+//	case 0x0210:
+//		phydev->speed = SPEED_2500;
+//		break;
+//	case 0x0220:
+//		phydev->speed = SPEED_5000;
+//		break;
+//	default:
+//		break;
+//	}
+
+    phydev->speed = SPEED_100;
 
 	return 0;
 }
@@ -615,11 +623,12 @@ static struct phy_driver realtek_drvs[] = {
 		.write_page	= rtl821x_write_page,
 	}, {
 		PHY_ID_MATCH_EXACT(0x001cc916),
-		.name		= "RTL8211F Gigabit Ethernet",
+//		.name		= "RTL8211F Gigabit Ethernet",
+        .name		= "RTL8211F Fast Ethernet",
 		.config_init	= &rtl8211f_config_init,
-		.read_status	= rtlgen_read_status,
-		.ack_interrupt	= &rtl8211f_ack_interrupt,
-		.config_intr	= &rtl8211f_config_intr,
+//		.read_status	= rtlgen_read_status,
+//		.ack_interrupt	= &rtl8211f_ack_interrupt,
+//		.config_intr	= &rtl8211f_config_intr,
 		.suspend	= genphy_suspend,
 		.resume		= genphy_resume,
 		.read_page	= rtl821x_read_page,
